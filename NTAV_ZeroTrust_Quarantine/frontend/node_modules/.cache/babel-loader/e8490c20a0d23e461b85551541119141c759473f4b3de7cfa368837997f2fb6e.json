{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\uniew\\\\Desktop\\\\Ewha\\\\Ewha_24_2\\\\\\uC878\\uD504\\\\Git\\\\NTAV\\\\NTAV_ZeroTrust_Quarantine\\\\frontend\\\\src\\\\pageComponents\\\\downloadPage.js\";\n/*import React, { Component } from \"react\";\r\nimport { getSecurityToken } from \"../api\";\r\nimport \"../css/downloadPage.css\";\r\n\r\nclass DownloadPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedFile: null, // 선택한 파일\r\n    };\r\n  }\r\n\r\n  handleDownload = (event, fileName) => {\r\n    event.preventDefault(); // 기본 다운로드 동작 방지\r\n\r\n    const userConfirmed = window.confirm(`${fileName}을(를) 다운로드하시겠습니까?`);\r\n\r\n    if (userConfirmed) {\r\n      this.setState({ selectedFile: fileName }, () => {\r\n        let downloadUrl = \"\";\r\n\r\n        // 파일 이름에 따른 다운로드 URL 설정\r\n        if (fileName === \"Windows\") {\r\n          downloadUrl = \"https://github.com/notry345/test/releases/download/test2/windows_scan.exe\";\r\n        } else if (fileName === \"macOS\") {\r\n          downloadUrl = \"https://github.com/shiny2702/NTAV_ZeroTrust_ERP/blob/seunghee/exe_dev/dev_mac/mac_scan\";\r\n        } else if (fileName === \"Linux\") {\r\n          downloadUrl = \"https://github.com/notry345/test/releases/download/untagged-1e361c96eed14322971a/linux_scan\";\r\n        }\r\n\r\n        // 일정 시간 후 다운로드 시작\r\n        setTimeout(() => {\r\n          window.location.href = downloadUrl;\r\n        }, 1500);\r\n      });\r\n    } else {\r\n      this.setState({ selectedFile: null });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { selectedFile } = this.state;\r\n\r\n    return (\r\n      <div className=\"download-container\">\r\n        <h1>파일 다운로드</h1>\r\n        <p>다운로드할 파일을 선택하세요.</p>\r\n\r\n        <ul className=\"download-links\">\r\n          <li><a onClick={(e) => this.handleDownload(e, \"Windows\")}>Windows</a></li>\r\n          <li><a onClick={(e) => this.handleDownload(e, \"macOS\")}>macOS</a></li>\r\n          <li><a onClick={(e) => this.handleDownload(e, \"Linux\")}>Linux</a></li>\r\n        </ul>\r\n        {selectedFile && <p>{selectedFile} 다운로드가 시작됩니다...</p>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DownloadPage;*/\n\nimport { Component } from \"react\";\nimport { getSecurityToken } from \"../api\";\nimport \"../css/downloadPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass DownloadPage extends Component {\n  constructor(props) {\n    super(props);\n    this.startPollingSecurityToken = () => {\n      if (this.state.pollingInterval) return;\n      console.log(\"🔁 Polling 시작\");\n      const interval = setInterval(() => {\n        console.log(\"🔁 5초마다 보안 토큰 요청\");\n        getSecurityToken().then(token => {\n          if (token) {\n            console.log(\"✅ 보안 토큰 수신 완료:\", token);\n            clearInterval(this.state.pollingInterval);\n            this.setState({\n              pollingInterval: null\n            });\n          } else {\n            console.warn(\"⚠️ 아직 보안 토큰 없음\");\n          }\n        }).catch(error => {\n          console.error(\"❌ 보안 토큰 가져오기 실패:\", error);\n        });\n      }, 5000);\n      this.setState({\n        pollingInterval: interval\n      });\n    };\n    this.handleDownload = (event, fileName) => {\n      event.preventDefault();\n      const userConfirmed = window.confirm(`${fileName}을(를) 다운로드하시겠습니까?`);\n      if (userConfirmed) {\n        this.setState({\n          selectedFile: fileName\n        }, () => {\n          let downloadUrl = \"\";\n          if (fileName === \"Windows\") {\n            downloadUrl = \"https://github.com/notry345/test/releases/download/test2/windows_scan.exe\";\n          } else if (fileName === \"macOS\") {\n            downloadUrl = \"https://github.com/shiny2702/NTAV_ZeroTrust_ERP/blob/seunghee/exe_dev/dev_mac/mac_scan\";\n          } else if (fileName === \"Linux\") {\n            downloadUrl = \"https://github.com/notry345/test/releases/download/untagged-1e361c96eed14322971a/linux_scan\";\n          }\n          console.log(`🧾 ${fileName} 다운로드를 시작합니다...`);\n          setTimeout(() => {\n            window.location.href = downloadUrl;\n            this.startPollingSecurityToken();\n          }, 1500);\n        });\n      } else {\n        console.log(\"❌ 다운로드 취소\");\n        this.setState({\n          selectedFile: null\n        });\n      }\n    };\n    this.state = {\n      selectedFile: null,\n      pollingInterval: null\n    };\n  }\n  render() {\n    const {\n      selectedFile\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"download-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD30C\\uC77C \\uB2E4\\uC6B4\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uB2E4\\uC6B4\\uB85C\\uB4DC\\uD560 \\uD30C\\uC77C\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"download-links\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            onClick: e => this.handleDownload(e, \"Windows\"),\n            children: \"Windows\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            onClick: e => this.handleDownload(e, \"macOS\"),\n            children: \"macOS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            onClick: e => this.handleDownload(e, \"Linux\"),\n            children: \"Linux\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [selectedFile, \" \\uB2E4\\uC6B4\\uB85C\\uB4DC\\uAC00 \\uC2DC\\uC791\\uB429\\uB2C8\\uB2E4...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default DownloadPage;","map":{"version":3,"names":["Component","getSecurityToken","jsxDEV","_jsxDEV","DownloadPage","constructor","props","startPollingSecurityToken","state","pollingInterval","console","log","interval","setInterval","then","token","clearInterval","setState","warn","catch","error","handleDownload","event","fileName","preventDefault","userConfirmed","window","confirm","selectedFile","downloadUrl","setTimeout","location","href","render","className","children","_jsxFileName","lineNumber","columnNumber","onClick","e"],"sources":["C:/Users/uniew/Desktop/Ewha/Ewha_24_2/졸프/Git/NTAV/NTAV_ZeroTrust_Quarantine/frontend/src/pageComponents/downloadPage.js"],"sourcesContent":["/*import React, { Component } from \"react\";\r\nimport { getSecurityToken } from \"../api\";\r\nimport \"../css/downloadPage.css\";\r\n\r\nclass DownloadPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedFile: null, // 선택한 파일\r\n    };\r\n  }\r\n\r\n  handleDownload = (event, fileName) => {\r\n    event.preventDefault(); // 기본 다운로드 동작 방지\r\n\r\n    const userConfirmed = window.confirm(`${fileName}을(를) 다운로드하시겠습니까?`);\r\n\r\n    if (userConfirmed) {\r\n      this.setState({ selectedFile: fileName }, () => {\r\n        let downloadUrl = \"\";\r\n\r\n        // 파일 이름에 따른 다운로드 URL 설정\r\n        if (fileName === \"Windows\") {\r\n          downloadUrl = \"https://github.com/notry345/test/releases/download/test2/windows_scan.exe\";\r\n        } else if (fileName === \"macOS\") {\r\n          downloadUrl = \"https://github.com/shiny2702/NTAV_ZeroTrust_ERP/blob/seunghee/exe_dev/dev_mac/mac_scan\";\r\n        } else if (fileName === \"Linux\") {\r\n          downloadUrl = \"https://github.com/notry345/test/releases/download/untagged-1e361c96eed14322971a/linux_scan\";\r\n        }\r\n\r\n        // 일정 시간 후 다운로드 시작\r\n        setTimeout(() => {\r\n          window.location.href = downloadUrl;\r\n        }, 1500);\r\n      });\r\n    } else {\r\n      this.setState({ selectedFile: null });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { selectedFile } = this.state;\r\n\r\n    return (\r\n      <div className=\"download-container\">\r\n        <h1>파일 다운로드</h1>\r\n        <p>다운로드할 파일을 선택하세요.</p>\r\n\r\n        <ul className=\"download-links\">\r\n          <li><a onClick={(e) => this.handleDownload(e, \"Windows\")}>Windows</a></li>\r\n          <li><a onClick={(e) => this.handleDownload(e, \"macOS\")}>macOS</a></li>\r\n          <li><a onClick={(e) => this.handleDownload(e, \"Linux\")}>Linux</a></li>\r\n        </ul>\r\n        {selectedFile && <p>{selectedFile} 다운로드가 시작됩니다...</p>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DownloadPage;*/\r\n\r\nimport { Component } from \"react\";\r\nimport { getSecurityToken } from \"../api\";\r\nimport \"../css/downloadPage.css\";\r\n\r\nclass DownloadPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedFile: null,\r\n      pollingInterval: null,\r\n    };\r\n  }\r\n\r\n  startPollingSecurityToken = () => {\r\n    if (this.state.pollingInterval) return;\r\n\r\n    console.log(\"🔁 Polling 시작\");\r\n\r\n    const interval = setInterval(() => {\r\n      console.log(\"🔁 5초마다 보안 토큰 요청\");\r\n      getSecurityToken()\r\n        .then(token => {\r\n          if (token) {\r\n            console.log(\"✅ 보안 토큰 수신 완료:\", token);\r\n            clearInterval(this.state.pollingInterval);\r\n            this.setState({ pollingInterval: null });\r\n          } else {\r\n            console.warn(\"⚠️ 아직 보안 토큰 없음\");\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error(\"❌ 보안 토큰 가져오기 실패:\", error);\r\n        });\r\n    }, 5000);\r\n\r\n    this.setState({ pollingInterval: interval });\r\n  };\r\n\r\n  handleDownload = (event, fileName) => {\r\n    event.preventDefault();\r\n\r\n    const userConfirmed = window.confirm(`${fileName}을(를) 다운로드하시겠습니까?`);\r\n\r\n    if (userConfirmed) {\r\n      this.setState({ selectedFile: fileName }, () => {\r\n        let downloadUrl = \"\";\r\n\r\n        if (fileName === \"Windows\") {\r\n          downloadUrl = \"https://github.com/notry345/test/releases/download/test2/windows_scan.exe\";\r\n        } else if (fileName === \"macOS\") {\r\n          downloadUrl = \"https://github.com/shiny2702/NTAV_ZeroTrust_ERP/blob/seunghee/exe_dev/dev_mac/mac_scan\";\r\n        } else if (fileName === \"Linux\") {\r\n          downloadUrl = \"https://github.com/notry345/test/releases/download/untagged-1e361c96eed14322971a/linux_scan\";\r\n        }\r\n\r\n        console.log(`🧾 ${fileName} 다운로드를 시작합니다...`);\r\n\r\n        setTimeout(() => {\r\n          window.location.href = downloadUrl;\r\n          this.startPollingSecurityToken();\r\n        }, 1500);\r\n      });\r\n    } else {\r\n      console.log(\"❌ 다운로드 취소\");\r\n      this.setState({ selectedFile: null });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { selectedFile } = this.state;\r\n\r\n    return (\r\n      <div className=\"download-container\">\r\n        <h1>파일 다운로드</h1>\r\n        <p>다운로드할 파일을 선택하세요.</p>\r\n\r\n        <ul className=\"download-links\">\r\n          <li><a onClick={(e) => this.handleDownload(e, \"Windows\")}>Windows</a></li>\r\n          <li><a onClick={(e) => this.handleDownload(e, \"macOS\")}>macOS</a></li>\r\n          <li><a onClick={(e) => this.handleDownload(e, \"Linux\")}>Linux</a></li>\r\n        </ul>\r\n        {selectedFile && <p>{selectedFile} 다운로드가 시작됩니다...</p>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DownloadPage;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}