{"ast":null,"code":"const SERVER_URL = \"https://ntav.project:4430/quarantine\";\nexport const sendInfoToServer = async (osInfo, browserInfo, networkInfo) => {\n  // JSON ÌòïÏãùÏúºÎ°ú Îç∞Ïù¥ÌÑ∞ Ï§ÄÎπÑ\n  // ÏàòÏßëÌïú Ï†ïÎ≥¥ payload Í∞ùÏ≤¥Ïóê Ï†ÄÏû•\n  const payload = {\n    osInfo: osInfo,\n    browserInfo: browserInfo,\n    networkInfo: networkInfo\n  };\n  try {\n    console.log(\"Sending data to server...\");\n    // ÎîîÎ∞îÏù¥Ïä§ Ï†ïÎ≥¥ Ï†ÑÏÜ°\n    const response = await fetch(`${SERVER_URL}/api/verify-device`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json' // JSON ÌòïÏãùÏúºÎ°ú Ï†ÑÎã¨\n      },\n      credentials: 'include',\n      // ‚úÖ Ïø†ÌÇ§ Ìè¨Ìï®(ÏûÑÏãú)\n      body: JSON.stringify(payload)\n    });\n    console.log(\"Payload being sent to server:\", payload);\n\n    // ÏÑúÎ≤Ñ ÏùëÎãµ Ï≤òÎ¶¨\n    if (response.ok) {\n      const data = await response.json();\n      if (data.success) {\n        console.log(\"ÎîîÎ∞îÏù¥Ïä§ Ï†ïÎ≥¥ Ï†ÑÏÜ° ÏÑ±Í≥µ:\", data.message);\n        console.log(data);\n        return data; // ÏÑúÎ≤ÑÏóêÏÑú Î∞òÌôòÌïú deviceToken Î∞òÌôò\n      } else {\n        console.error(\"ÎîîÎ∞îÏù¥Ïä§ Í≤ÄÏ¶ù Ïã§Ìå®:\", data.error);\n      }\n    } else {\n      console.error(\"Failed to send data\");\n    }\n  } catch (error) {\n    console.error(\"Error sending data:\", error);\n  }\n};\nexport const getSecurityToken = async () => {\n  try {\n    console.log(\"üîê Security Checking... (ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏)\");\n    const response = await fetch(`${SERVER_URL}/security/verify-security`, {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: 'include' // Ïø†ÌÇ§ Ìè¨Ìï®\n    });\n    console.log(\"üåê ÏÑúÎ≤Ñ ÏùëÎãµ ÏÉÅÌÉú:\", response.status);\n    if (response.ok) {\n      const data = await response.json();\n      if (data.success) {\n        console.log(\"‚úÖ Î≥¥Ïïà Í≤ÄÏ¶ù ÏÑ±Í≥µ:\", data.message);\n        console.log(\"üì¶ ÏÑúÎ≤Ñ ÏùëÎãµ Îç∞Ïù¥ÌÑ∞:\", data);\n        return data;\n      } else {\n        console.warn(\"‚ö†Ô∏è Î≥¥Ïïà Í≤ÄÏ¶ù Ïã§Ìå®:\", data.error);\n        return null;\n      }\n    } else {\n      console.error(\"‚ùå ÏÑúÎ≤Ñ ÏùëÎãµ Ïã§Ìå®:\", response.status);\n      return null;\n    }\n  } catch (error) {\n    console.error(\"‚ùå ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ ÏöîÏ≤≠ Ïò§Î•ò:\", error);\n    return null;\n  }\n};\n\n// ÏÑúÎ≤ÑÏóêÏÑú ÎîîÎ∞îÏù¥Ïä§ ÌÜ†ÌÅ∞ÏùÑ Í∞ÄÏ†∏Ïò§Îäî Ìï®Ïàò\n/*export const getDeviceToken = async () => {\r\n  try {\r\n    const response = await fetch(`${SERVER_URL}/api/verify-device`, {\r\n      method: \"GET\"\r\n      //credentials: \"include\" // Ïø†ÌÇ§ÎÇò Ïù∏Ï¶ù Ï†ïÎ≥¥Î•º Ìï®Íªò Î≥¥ÎÇº Í≤ΩÏö∞\r\n    });\r\n\r\n    console.log(\"Server Response:\", response);  // ÏÑúÎ≤Ñ ÏùëÎãµ ÌôïÏù∏\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Failed to fetch device token\");\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log(\"Response Data:\", data);  // JSON ÏùëÎãµ Îç∞Ïù¥ÌÑ∞ ÌôïÏù∏\r\n    \r\n    if (data.success) {\r\n      return data.deviceToken; // ÏÑúÎ≤ÑÍ∞Ä `{ deviceToken: \"token\" }` ÌòïÏãùÏúºÎ°ú ÏùëÎãµÌïúÎã§Í≥† Í∞ÄÏ†ï\r\n    } else {\r\n      console.error(\"ÎîîÎ∞îÏù¥Ïä§ ÌÜ†ÌÅ∞ Í∞ÄÏ†∏Ïò§Í∏∞ Ïã§Ìå®:\", data.error);\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error fetching device token:\", error);\r\n    return null; // Ïã§Ìå® Ïãú null Î∞òÌôò\r\n  }\r\n  };*/","map":{"version":3,"names":["SERVER_URL","sendInfoToServer","osInfo","browserInfo","networkInfo","payload","console","log","response","fetch","method","headers","credentials","body","JSON","stringify","ok","data","json","success","message","error","getSecurityToken","status","warn"],"sources":["C:/Users/uniew/Desktop/Ewha/Ewha_24_2/Ï°∏ÌîÑ/Git/NTAV/NTAV_ZeroTrust_Quarantine/frontend/src/api.js"],"sourcesContent":["const SERVER_URL = \"https://ntav.project:4430/quarantine\";\r\n\r\nexport const sendInfoToServer = async (osInfo, browserInfo, networkInfo) => {\r\n    \r\n    // JSON ÌòïÏãùÏúºÎ°ú Îç∞Ïù¥ÌÑ∞ Ï§ÄÎπÑ\r\n    // ÏàòÏßëÌïú Ï†ïÎ≥¥ payload Í∞ùÏ≤¥Ïóê Ï†ÄÏû•\r\n    const payload = {\r\n        osInfo: osInfo,\r\n        browserInfo: browserInfo,\r\n        networkInfo: networkInfo,\r\n      };\r\n\r\n    try {\r\n      console.log(\"Sending data to server...\");\r\n      // ÎîîÎ∞îÏù¥Ïä§ Ï†ïÎ≥¥ Ï†ÑÏÜ°\r\n      const response = await fetch(`${SERVER_URL}/api/verify-device`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json', // JSON ÌòïÏãùÏúºÎ°ú Ï†ÑÎã¨\r\n        },\r\n        credentials: 'include', // ‚úÖ Ïø†ÌÇ§ Ìè¨Ìï®(ÏûÑÏãú)\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      console.log(\"Payload being sent to server:\", payload);\r\n\r\n      // ÏÑúÎ≤Ñ ÏùëÎãµ Ï≤òÎ¶¨\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        if (data.success) {\r\n          console.log(\"ÎîîÎ∞îÏù¥Ïä§ Ï†ïÎ≥¥ Ï†ÑÏÜ° ÏÑ±Í≥µ:\", data.message);\r\n          console.log(data);\r\n          return data; // ÏÑúÎ≤ÑÏóêÏÑú Î∞òÌôòÌïú deviceToken Î∞òÌôò\r\n        } else {\r\n          console.error(\"ÎîîÎ∞îÏù¥Ïä§ Í≤ÄÏ¶ù Ïã§Ìå®:\", data.error);\r\n        }\r\n      } else {\r\n        console.error(\"Failed to send data\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error sending data:\", error);\r\n    }\r\n  };\r\n\r\nexport const getSecurityToken = async () => {\r\n  try {\r\n    console.log(\"üîê Security Checking... (ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏)\");\r\n    \r\n    const response = await fetch(`${SERVER_URL}/security/verify-security`, {\r\n      method: 'GET',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: 'include', // Ïø†ÌÇ§ Ìè¨Ìï®\r\n    });\r\n\r\n    console.log(\"üåê ÏÑúÎ≤Ñ ÏùëÎãµ ÏÉÅÌÉú:\", response.status);\r\n\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        console.log(\"‚úÖ Î≥¥Ïïà Í≤ÄÏ¶ù ÏÑ±Í≥µ:\", data.message);\r\n        console.log(\"üì¶ ÏÑúÎ≤Ñ ÏùëÎãµ Îç∞Ïù¥ÌÑ∞:\", data);\r\n        return data;\r\n      } else {\r\n        console.warn(\"‚ö†Ô∏è Î≥¥Ïïà Í≤ÄÏ¶ù Ïã§Ìå®:\", data.error);\r\n        return null;\r\n      }\r\n    } else {\r\n      console.error(\"‚ùå ÏÑúÎ≤Ñ ÏùëÎãµ Ïã§Ìå®:\", response.status);\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.error(\"‚ùå ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ ÏöîÏ≤≠ Ïò§Î•ò:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\n\r\n// ÏÑúÎ≤ÑÏóêÏÑú ÎîîÎ∞îÏù¥Ïä§ ÌÜ†ÌÅ∞ÏùÑ Í∞ÄÏ†∏Ïò§Îäî Ìï®Ïàò\r\n/*export const getDeviceToken = async () => {\r\n  try {\r\n    const response = await fetch(`${SERVER_URL}/api/verify-device`, {\r\n      method: \"GET\"\r\n      //credentials: \"include\" // Ïø†ÌÇ§ÎÇò Ïù∏Ï¶ù Ï†ïÎ≥¥Î•º Ìï®Íªò Î≥¥ÎÇº Í≤ΩÏö∞\r\n    });\r\n\r\n    console.log(\"Server Response:\", response);  // ÏÑúÎ≤Ñ ÏùëÎãµ ÌôïÏù∏\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Failed to fetch device token\");\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log(\"Response Data:\", data);  // JSON ÏùëÎãµ Îç∞Ïù¥ÌÑ∞ ÌôïÏù∏\r\n    \r\n    if (data.success) {\r\n      return data.deviceToken; // ÏÑúÎ≤ÑÍ∞Ä `{ deviceToken: \"token\" }` ÌòïÏãùÏúºÎ°ú ÏùëÎãµÌïúÎã§Í≥† Í∞ÄÏ†ï\r\n    } else {\r\n      console.error(\"ÎîîÎ∞îÏù¥Ïä§ ÌÜ†ÌÅ∞ Í∞ÄÏ†∏Ïò§Í∏∞ Ïã§Ìå®:\", data.error);\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error fetching device token:\", error);\r\n    return null; // Ïã§Ìå® Ïãú null Î∞òÌôò\r\n  }\r\n  };*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}