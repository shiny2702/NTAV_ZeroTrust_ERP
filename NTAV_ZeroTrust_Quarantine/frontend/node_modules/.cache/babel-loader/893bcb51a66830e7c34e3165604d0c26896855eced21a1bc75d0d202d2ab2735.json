{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\uniew\\\\Desktop\\\\Ewha\\\\Ewha_24_2\\\\\\uC878\\uD504\\\\Git\\\\NTAV\\\\NTAV_ZeroTrust_Quarantine\\\\frontend\\\\src\\\\pageComponents\\\\loadingPage.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { sendInfoToServer } from '../api';\nimport withRouter from '../hocs/withRouter';\nimport '../css/loadingPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass LoadingPage extends Component {\n  constructor(props) {\n    super(props);\n    this.getOSInfo = () => {\n      const userAgent = navigator.userAgent;\n      if (userAgent.includes(\"Win\")) return \"Windows\";\n      if (userAgent.includes(\"Mac\")) return \"macOS\";\n      if (userAgent.includes(\"Linux\")) return \"Linux\";\n      return \"Unknown OS\";\n    };\n    this.getBrowserInfo = () => {\n      const userAgent = navigator.userAgent;\n      if (userAgent.includes(\"Chrome\") && !userAgent.includes(\"Edg\")) return \"Chrome\";\n      if (userAgent.includes(\"Edg\")) return \"Edge\";\n      if (userAgent.includes(\"Firefox\")) return \"Firefox\";\n      if (userAgent.includes(\"Safari\") && !userAgent.includes(\"Chrome\")) return \"Safari\";\n      return \"Unknown Browser\";\n    };\n    this.getNetworkInfo = () => {\n      const isOnline = navigator.onLine ? \"Online\" : \"Offline\";\n      const connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection;\n      let networkType = \"Unknown\";\n      let downlink = \"Unknown\";\n      let rtt = \"Unknown\";\n      if (connection) {\n        networkType = connection.effectiveType || \"Unknown\";\n        downlink = connection.downlink || \"Unknown\";\n        rtt = connection.rtt || \"Unknown\";\n      }\n      return {\n        isOnline,\n        networkType,\n        downlink,\n        rtt\n      };\n    };\n    this.state = {\n      loading: true,\n      isVerified: false,\n      error: null,\n      progress: 0,\n      // 로딩 진행 상태\n      statusMessage: \"Initializing...\"\n    };\n    this.initialized = false;\n  }\n  async initializeApp() {\n    if (this.initialized) return;\n    this.initialized = true;\n    try {\n      let response = null;\n      let message = \"\";\n      //let deviceToken = null;\n\n      const steps = [{\n        progress: 10,\n        statusMessage: \"Gathering OS info...\",\n        action: this.getOSInfo\n      }, {\n        progress: 30,\n        statusMessage: \"Gathering browser info...\",\n        action: this.getBrowserInfo\n      }, {\n        progress: 50,\n        statusMessage: \"Gathering network info...\",\n        action: this.getNetworkInfo\n      }, {\n        progress: 70,\n        statusMessage: \"Sending data to server...\",\n        action: async () => {\n          console.log(\"🔹 서버로 데이터 전송 중...\");\n          response = await sendInfoToServer(this.getOSInfo(), this.getBrowserInfo(), this.getNetworkInfo());\n          console.log(\"🔹 서버 응답:\", response);\n          return response;\n        }\n      }, {\n        progress: 80,\n        statusMessage: \"Processing server response...\",\n        action: async () => {\n          var _response;\n          if (!((_response = response) !== null && _response !== void 0 && _response.success)) {\n            console.error(\"🚨 서버 검증 실패:\", response);\n            throw new Error(\"Server verification failed\");\n          }\n          return response;\n        }\n      }, {\n        progress: 90,\n        statusMessage: \"Generating device token...\",\n        action: async () => {\n          var _response2;\n          if ((_response2 = response) !== null && _response2 !== void 0 && _response2.success) {\n            //deviceToken = await getDeviceToken();\n            message = response.message;\n            return message;\n          } else {\n            throw new Error(\"Device token generation skipped due to failed verification\");\n          }\n        }\n      }];\n      for (let step of steps) {\n        console.log(`✅ [${step.progress}%] ${step.statusMessage}`);\n        this.setState({\n          progress: step.progress,\n          statusMessage: step.statusMessage\n        });\n        await new Promise(resolve => setTimeout(resolve, 500));\n        try {\n          await step.action();\n        } catch (error) {\n          console.error(`❌ Error at step ${step.progress}:`, error.message);\n          this.setState({\n            progress: 100,\n            isVerified: false,\n            statusMessage: \"Verification failed.\"\n          });\n          setTimeout(() => this.props.navigate(\"/forbidden\"), 3000);\n          return;\n        }\n      }\n      this.setState({\n        progress: 100,\n        isVerified: true,\n        message,\n        statusMessage: \"Verification complete!\"\n      }, () => this.props.navigate(\"/exe-download\"));\n    } catch (error) {\n      console.error(\"❌ Error during initialization:\", error);\n      this.setState({\n        loading: false,\n        error: \"Initialization failed\",\n        statusMessage: \"Error occurred.\"\n      });\n    }\n  }\n  componentDidMount() {\n    if (this.state.loading && !this.initialized) {\n      this.initializeApp();\n    }\n  }\n  render() {\n    const {\n      progress,\n      statusMessage\n    } = this.state;\n    const milestones = [10, 30, 50, 70, 80, 90];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/ntav_loading.gif\",\n        alt: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"milestone-container\",\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          width: '40%',\n          margin: '10px auto'\n        },\n        children: milestones.map((milestone, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `milestone ${progress >= milestone ? 'checked' : ''}`,\n          style: {\n            margin: '0 10px'\n          },\n          children: progress >= milestone ? '✔' : '○'\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress\",\n          style: {\n            width: `${progress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [statusMessage, \" (\", progress, \"%)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this);\n  }\n}\nLoadingPage.propTypes = {\n  navigate: PropTypes.func.isRequired // navigate 추가\n};\nexport default _c = withRouter(LoadingPage);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","Component","PropTypes","sendInfoToServer","withRouter","jsxDEV","_jsxDEV","LoadingPage","constructor","props","getOSInfo","userAgent","navigator","includes","getBrowserInfo","getNetworkInfo","isOnline","onLine","connection","mozConnection","webkitConnection","networkType","downlink","rtt","effectiveType","state","loading","isVerified","error","progress","statusMessage","initialized","initializeApp","response","message","steps","action","console","log","_response","success","Error","_response2","step","setState","Promise","resolve","setTimeout","navigate","componentDidMount","render","milestones","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","width","margin","map","milestone","index","propTypes","func","isRequired","_c","$RefreshReg$"],"sources":["C:/Users/uniew/Desktop/Ewha/Ewha_24_2/졸프/Git/NTAV/NTAV_ZeroTrust_Quarantine/frontend/src/pageComponents/loadingPage.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { sendInfoToServer } from '../api';\r\nimport withRouter from '../hocs/withRouter';\r\nimport '../css/loadingPage.css';\r\n\r\nclass LoadingPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      isVerified: false,\r\n      error: null,\r\n      progress: 0, // 로딩 진행 상태\r\n      statusMessage: \"Initializing...\"\r\n    };\r\n    this.initialized = false;\r\n  }\r\n\r\n  getOSInfo = () => {\r\n    const userAgent = navigator.userAgent;\r\n    if (userAgent.includes(\"Win\")) return \"Windows\";\r\n    if (userAgent.includes(\"Mac\")) return \"macOS\";\r\n    if (userAgent.includes(\"Linux\")) return \"Linux\";\r\n    return \"Unknown OS\";\r\n  };\r\n\r\n  getBrowserInfo = () => {\r\n    const userAgent = navigator.userAgent;\r\n    if (userAgent.includes(\"Chrome\") && !userAgent.includes(\"Edg\")) return \"Chrome\";\r\n    if (userAgent.includes(\"Edg\")) return \"Edge\";\r\n    if (userAgent.includes(\"Firefox\")) return \"Firefox\";\r\n    if (userAgent.includes(\"Safari\") && !userAgent.includes(\"Chrome\")) return \"Safari\";\r\n    return \"Unknown Browser\";\r\n  };\r\n\r\n  getNetworkInfo = () => {\r\n    const isOnline = navigator.onLine ? \"Online\" : \"Offline\";\r\n    const connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection;\r\n\r\n    let networkType = \"Unknown\";\r\n    let downlink = \"Unknown\";\r\n    let rtt = \"Unknown\";\r\n\r\n    if (connection) {\r\n      networkType = connection.effectiveType || \"Unknown\";\r\n      downlink = connection.downlink || \"Unknown\";\r\n      rtt = connection.rtt || \"Unknown\";\r\n    }\r\n\r\n    return { isOnline, networkType, downlink, rtt };\r\n  };\r\n\r\n  async initializeApp() {\r\n    if (this.initialized) return;\r\n    this.initialized = true;\r\n  \r\n    try {\r\n      let response = null;\r\n      let message = \"\";\r\n      //let deviceToken = null;\r\n  \r\n      const steps = [\r\n        { progress: 10, statusMessage: \"Gathering OS info...\", action: this.getOSInfo },\r\n        { progress: 30, statusMessage: \"Gathering browser info...\", action: this.getBrowserInfo },\r\n        { progress: 50, statusMessage: \"Gathering network info...\", action: this.getNetworkInfo },\r\n        { progress: 70, statusMessage: \"Sending data to server...\", action: async () => {\r\n            console.log(\"🔹 서버로 데이터 전송 중...\");\r\n            response = await sendInfoToServer(this.getOSInfo(), this.getBrowserInfo(), this.getNetworkInfo());\r\n            console.log(\"🔹 서버 응답:\", response);\r\n            return response;\r\n        }},\r\n        { progress: 80, statusMessage: \"Processing server response...\", action: async () => {\r\n            if (!response?.success) {\r\n                console.error(\"🚨 서버 검증 실패:\", response);\r\n                throw new Error(\"Server verification failed\");\r\n            }\r\n            return response;\r\n        }},\r\n        { progress: 90, statusMessage: \"Generating device token...\", action: async () => {\r\n          if (response?.success) {\r\n            //deviceToken = await getDeviceToken();\r\n            message = response.message;\r\n            return message;\r\n          } else {\r\n            throw new Error(\"Device token generation skipped due to failed verification\");\r\n          }\r\n        }}\r\n      ];\r\n  \r\n      for (let step of steps) {\r\n        console.log(`✅ [${step.progress}%] ${step.statusMessage}`);\r\n        this.setState({ progress: step.progress, statusMessage: step.statusMessage });\r\n        await new Promise(resolve => setTimeout(resolve, 500));\r\n  \r\n        try {\r\n          await step.action();\r\n        } catch (error) {\r\n          console.error(`❌ Error at step ${step.progress}:`, error.message);\r\n          this.setState({ progress: 100, isVerified: false, statusMessage: \"Verification failed.\" });\r\n          setTimeout(() => this.props.navigate(\"/forbidden\"), 3000);\r\n          return;\r\n        }\r\n      }\r\n  \r\n      this.setState(\r\n        { progress: 100, isVerified: true, message, statusMessage: \"Verification complete!\" },\r\n        () => this.props.navigate(\"/exe-download\")\r\n      );\r\n  \r\n    } catch (error) {\r\n      console.error(\"❌ Error during initialization:\", error);\r\n      this.setState({ loading: false, error: \"Initialization failed\", statusMessage: \"Error occurred.\" });\r\n    }\r\n  }\r\n  \r\n\r\n  componentDidMount() {\r\n    if (this.state.loading && !this.initialized) {\r\n      this.initializeApp();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { progress, statusMessage } = this.state;\r\n    const milestones = [10, 30, 50, 70, 80, 90];\r\n\r\n    return (\r\n      <div className=\"loading-container\">\r\n        <img src=\"/ntav_loading.gif\" alt=\"Loading...\" />\r\n        <div className=\"milestone-container\" style={{ display: 'flex', justifyContent: 'space-between', width: '40%', margin: '10px auto' }}>\r\n          {milestones.map((milestone, index) => (\r\n            <span key={index} className={`milestone ${progress >= milestone ? 'checked' : ''}`} style={{ margin: '0 10px' }}>\r\n              {progress >= milestone ? '✔' : '○'}\r\n            </span>\r\n          ))}\r\n        </div>\r\n        <div className=\"progress-bar\">\r\n          <div className=\"progress\" style={{ width: `${progress}%` }}></div>\r\n        </div>\r\n        <p>{statusMessage} ({progress}%)</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLoadingPage.propTypes = {\r\n  navigate: PropTypes.func.isRequired, // navigate 추가\r\n};\r\n\r\nexport default withRouter(LoadingPage);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}